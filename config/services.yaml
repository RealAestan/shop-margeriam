# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.listener.admin.menu_builder:
        class: App\Menu\AdminMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: addAdminMenuItems }
    app.course.form.type:
        class: App\Form\Type\CourseType
        tags:
            - { name: form.type }
        arguments: ['App\Entity\Course\Course', ['sylius']]
    app.course_translation.form.type:
        class: App\Form\Type\CourseTranslationType
        tags:
            - { name: form.type }
        arguments: ['App\Entity\Course\CourseTranslation', ['sylius']]
    app.course_page.form.type:
        class: App\Form\Type\CoursePageType
        tags:
            - { name: form.type }
        arguments: ['App\Entity\Course\CoursePage', ['sylius']]
    app.course_page_translation.form.type:
        class: App\Form\Type\CoursePageTranslationType
        tags:
            - { name: form.type }
        arguments: ['App\Entity\Course\CoursePageTranslation', ['sylius'], '@router.default']
    app.form.extension.type.product_variant:
        class: App\Form\Extension\ProductVariantTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Sylius\Bundle\ProductBundle\Form\Type\ProductVariantType }
    app.form.extension.type.product_translation:
        class: App\Form\Extension\ProductTranslationTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Sylius\Bundle\ProductBundle\Form\Type\ProductTranslationType }
        arguments:
            - '%sylius.model.product_variant.class%'
            - '%sylius.form.type.product_variant.validation_groups%'
            - '@router.default'
    app.block_event_listener.admin.layout.javascripts:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - '/Admin/_javascripts.html.twig'
        tags:
            - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.layout.javascripts, method: onBlockEvent }
    app.block_event_listener.admin.layout.stylesheets:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - '/Admin/_stylesheets.html.twig'
        tags:
            - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.layout.stylesheets, method: onBlockEvent }
    app.listener.shop.menu_builder:
        class: App\Menu\AccountMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.shop.account, method: addAccountMenuItems }
    app.listener.shop.order_listener:
        class: App\Order\OrderEventListener
        tags:
            - { name: doctrine.event_listener, event: postUpdate }
