{% extends '@SyliusShop/Account/layout.html.twig' %}

{% block title %}{{ coursePage.name }} | {{ parent() }}{% endblock %}

{% block bodyAttr %}oncontextmenu="event.preventDefault();"{% endblock %}

{% block breadcrumb %}
    <div class="ui breadcrumb">
        <a href="{{ path('sylius_shop_homepage') }}" class="section">{{ 'sylius.ui.home'|trans }}</a>
        <div class="divider"> / </div>
        <a href="{{ path('sylius_shop_account_dashboard') }}" class="section">{{ 'sylius.ui.my_account'|trans }}</a>
        <div class="divider"> / </div>
        <a href="{{ path('sylius_shop_account_courses') }}" class="section">{{ 'sylius.ui.account.courses.menu'|trans }}</a>
        <div class="divider"> / </div>
        <a href="{{ path('sylius_shop_account_course', {slug: coursePage.course.slug}) }}" class="section">{{ coursePage.course.name }}</a>
        <div class="divider"> / </div>
        <div class="active section">{{ coursePage.name }}</div>
    </div>
{% endblock %}

{% block subcontent %}
    <div class="ui segment">
        {#<h1 class="ui dividing header">#}
            {#{{ coursePage.name }}#}
        {#</h1>#}
        <style>
            body {
                -webkit-user-select: none !important;
                -moz-user-select: none !important;
                -ms-user-select: none !important;
                user-select: none !important;
                -webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;
                -webkit-touch-callout: none !important;
            }
            div.red {
                background-color: #ffd2d2;
                border: 2px solid #d95e5e;
                border-radius: 10px;
                padding: 10px;
            }
            div.yellow {
                background-color: #fffec5;
                border: 2px solid #e5e330;
                border-radius: 10px;
                padding: 10px;
            }
            .course-container {
                word-break: break-word;
            }
            ol > li {
                font-size: 22px;
                font-family: Times New Roman, Arial, serif;
            }
            p, ul, ol {
                line-height: 1.65rem;
            }
            figure {
                padding: 10px;
                display: inline-block;
                margin: 1rem;
            }
            figcaption {
                text-align: center;
            }
            img {
                max-width: 100%;
                height: auto;
            }
            iframe {
                max-width: 100%;
            }
            #scrollToTopBtn {
                position: fixed;
                right: 20px;
                bottom: 20px;
                z-index: 1;
                color: #ffffff;
                background-color: rgba(0, 0, 0, 0.3);
                transform: translateY(100px);
                opacity: 0;
                transition: transform 0.5s, opacity 0.3s;
            }
            @media screen and (min-width: 768px) {
                .showScrollBtn {
                    transform: translateY(0) !important;
                    opacity: 1 !important;
                }
            }
        </style>
        <div class="course-container">
            {% set previousPage = coursePage.previousPage %}
            {% set nextPage = coursePage.nextPage %}
            {{ coursePage.content|replace({'<iframe': '<iframe allow="fullscreen; picture-in-picture" allowfullscreen '})|raw }}
            <div style="display: flex;justify-content: space-between; flex-wrap: wrap;">
                {% if previousPage %}
                    <a style="margin: 5px 5px 5px 0;" class="ui primary icon labeled button" href="{{ path('sylius_shop_account_course_page', {slug: coursePage.course.slug, pageSlug: previousPage.slug}) }}">
                        <i class="arrow left icon"></i>
                        {{ previousPage.name }}
                    </a>
                {% else %}
                    <span></span>
                {% endif %}
                {% if nextPage %}
                    <a style="margin: 5px 0 5px 0;" class="ui primary icon labeled button" href="{{ path('sylius_shop_account_course_page', {slug: coursePage.course.slug, pageSlug: nextPage.slug}) }}">
                        {{ nextPage.name }}
                        <i class="arrow right icon"></i>
                    </a>
                {% endif %}
            </div>
        </div>
        <button class="ui button icon" id="scrollToTopBtn">
            <i class="arrow up icon"></i>
        </button>
        <script>
			document.addEventListener('DOMContentLoaded', function() {
				var scrollToTopBtn = document.querySelector("#scrollToTopBtn");
				document.addEventListener("scroll", handleScroll);
				function handleScroll() {
					var scrollableHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;
					var GOLDEN_RATIO = 0.2;

					if ((document.documentElement.scrollTop / scrollableHeight ) > GOLDEN_RATIO) {
						if(!scrollToTopBtn.classList.contains("showScrollBtn"))
							scrollToTopBtn.classList.add("showScrollBtn")
					} else {
						if(scrollToTopBtn.classList.contains("showScrollBtn"))
							scrollToTopBtn.classList.remove("showScrollBtn")
					}
				}
				scrollToTopBtn.addEventListener("click", scrollToTop);
				function scrollToTop() {
					window.scrollTo({
						top: 0,
						behavior: "smooth"
					});
				}
			});
        </script>
    </div>
	<noscript>
		<style>
			#no-script-overlay {
				background: rgba(0, 0, 0, 0.95) none repeat scroll 0% 0%;
				position: fixed;
				inset: 0px;
				z-index: 801;
			}
			#no-script-container {
				position: relative;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				width: max-content;
			}
		</style>
		<div id="no-script-overlay">
			<div class="ui segment" id="no-script-container">
				<p>
					{{ 'enable_js_course'|trans }}
				</p>
			</div>
		</div>
	</noscript>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
		function stopPrntScr() {
			var inpFld = document.createElement("input");
			inpFld.setAttribute("value", "Access Denied");
			inpFld.setAttribute("width", "0");
			inpFld.style.height = "0px";
			inpFld.style.width = "0px";
			inpFld.style.border = "0px";
			document.body.appendChild(inpFld);
			inpFld.select();
			document.execCommand("copy");
			inpFld.remove();
		}
		document.addEventListener('keyup', function (e) {
			if (e.keyCode === 44) {
				stopPrntScr();
			}
		});
		document.addEventListener('dragstart', function() {
			event.preventDefault();
		});
		document.addEventListener('keydown', function(event) {
			var isOpera = (BrowserDetect.browser === "Opera");
			var isFirefox = (BrowserDetect.browser === 'Firefox');
			var isSafari = (BrowserDetect.browser === 'Safari');
			var isIE = (BrowserDetect.browser === 'Explorer');
			var isChrome = (BrowserDetect.browser === 'Chrome');
			var isMozilla = (BrowserDetect.browser === 'Mozilla');
			if (BrowserDetect.OS === 'Windows') {
				if (isChrome) {
					if (((event.ctrlKey && event.shiftKey) && (
						event.keyCode === 73 ||
						event.keyCode === 74 ||
						event.keyCode === 68 ||
						event.keyCode === 67))) {
						event.preventDefault();
					}
				}
				if (isFirefox) {
					if (((event.ctrlKey && event.shiftKey) && (
						event.keyCode === 73 ||
						event.keyCode === 74 ||
						event.keyCode === 67 ||
						event.keyCode === 75 ||
						event.keyCode === 69)) ||
						event.keyCode === 118 ||
						(event.keyCode === 112 && event.shiftKey) ||
						(event.keyCode === 115 && event.shiftKey) ||
						(event.keyCode === 118 && event.shiftKey) ||
						(event.keyCode === 120 && event.shiftKey)) {
						event.preventDefault();
					}
				}
				if (isOpera) {
					if (((event.ctrlKey && event.shiftKey) && (
						event.keyCode === 73 ||
						event.keyCode === 74 ||
						event.keyCode === 67 ||
						event.keyCode === 88 ||
						event.keyCode === 69))) {
						event.preventDefault();
					}
				}
				if (isIE) {
					if ((event.keyCode === 123 && event.shiftKey)) {
						event.preventDefault();
					}
				}
				if (isMozilla) {
					if ((event.ctrlKey && event.keyCode === 73) ||
						(event.altKey && event.keyCode === 68)) {
						event.preventDefault();
					}
				}
				if ((event.keyCode === 83 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 65 && event.ctrlKey)) {
					event.preventDefault();
				}
				if (event.keyCode === 67 && event.ctrlKey && !event.shiftKey) {
					event.preventDefault();
				}
				if ((event.keyCode === 88 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 85 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 70 && event.ctrlKey) || (event.keyCode === 71 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 80 && event.ctrlKey)) {
					event.preventDefault();
				}
				if (event.keyCode === 123 || (event.keyCode === 123 && event.shiftKey)) {
					event.preventDefault();
				}
			} else if (BrowserDetect.OS === 'Linux') {
				if (isChrome) {
					if (
						(
							(event.ctrlKey && event.shiftKey) &&
							(event.keyCode === 73 ||
								event.keyCode === 74 ||
								event.keyCode === 67
							)
						) ||
						(event.ctrlKey && event.keyCode === 85)
					) {
						event.preventDefault();
					}
				}
				if (isFirefox) {
					if (((event.ctrlKey && event.shiftKey) && (event.keyCode === 73 || event.keyCode === 74 || event.keyCode === 67 || event.keyCode === 75 || event.keyCode === 69)) || event.keyCode === 118 || event.keyCode === 116 || (event.keyCode === 112 && event.shiftKey) || (event.keyCode === 115 && event.shiftKey) || (event.keyCode === 118 && event.shiftKey) || (event.keyCode === 120 && event.shiftKey) || (event.keyCode === 85 && event.ctrlKey)) {
						event.preventDefault();
					}
				}
				if (isOpera) {
					if (((event.ctrlKey && event.shiftKey) && (event.keyCode === 73 || event.keyCode === 74 || event.keyCode === 67 || event.keyCode === 88 || event.keyCode === 69)) || (event.ctrlKey && event.keyCode === 85)) {
						event.preventDefault();
					}
				}
				if ((event.keyCode === 83 && event.ctrlKey)) {
					event.preventDefault();
				}
				if (event.keyCode === 65 && event.ctrlKey) {
					event.preventDefault();
				}
				if (event.keyCode === 67 && event.ctrlKey && !event.shiftKey) {
					event.preventDefault();
				}
				if ((event.keyCode === 88 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 85 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 70 && event.ctrlKey) || (event.keyCode === 71 && event.ctrlKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 80 && event.ctrlKey)) {
					event.preventDefault();
				}
				if (event.keyCode === 123 || (event.keyCode === 123 && event.shiftKey)) {
					event.preventDefault();
				}
			} else if (BrowserDetect.OS === 'Mac') {
				if (isChrome || isSafari || isOpera || isFirefox) {
					if (event.metaKey && (
						event.keyCode === 73 ||
						event.keyCode === 74 ||
						event.keyCode === 69 ||
						event.keyCode === 75)) {
						event.preventDefault();
					}
				}
				if ((event.keyCode === 83 && event.metaKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 65 && event.metaKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 67 && event.metaKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 88 && event.metaKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 85 && event.metaKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 70 && event.metaKey) || (event.keyCode === 71 && event.metaKey)) {
					event.preventDefault();
				}
				if ((event.keyCode === 80 && event.metaKey)) {
					event.preventDefault();
				}
				if (event.keyCode === 123) {
					event.preventDefault();
				}
			}
		});
		var BrowserDetect = {
			init: function () {
				this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
				this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "an unknown version";
				this.OS = this.searchString(this.dataOS) || "an unknown OS";
			},
			searchString: function (data) {
				for (var i = 0; i < data.length; i++) {
					var dataString = data[i].string;
					var dataProp = data[i].prop;
					this.versionSearchString = data[i].versionSearch || data[i].identity;
					if (dataString) {
						if (dataString.indexOf(data[i].subString) !== -1) return data[i].identity;
					} else if (dataProp) return data[i].identity;
				}
			},
			searchVersion: function (dataString) {
				var index = dataString.indexOf(this.versionSearchString);
				if (index === -1) return;
				return parseFloat(dataString.substring(index + this.versionSearchString.length + 1));
			},
			dataBrowser: [{
				string: navigator.userAgent,
				subString: "Chrome",
				identity: "Chrome"
			}, {
				string: navigator.userAgent,
				subString: "OmniWeb",
				versionSearch: "OmniWeb/",
				identity: "OmniWeb"
			}, {
				string: navigator.vendor,
				subString: "Apple",
				identity: "Safari",
				versionSearch: "Version"
			}, {
				prop: window.opera,
				identity: "Opera",
				versionSearch: "Version"
			}, {
				string: navigator.vendor,
				subString: "iCab",
				identity: "iCab"
			}, {
				string: navigator.vendor,
				subString: "KDE",
				identity: "Konqueror"
			}, {
				string: navigator.userAgent,
				subString: "Firefox",
				identity: "Firefox"
			}, {
				string: navigator.vendor,
				subString: "Camino",
				identity: "Camino"
			}, { // for newer Netscapes (6+)
				string: navigator.userAgent,
				subString: "Netscape",
				identity: "Netscape"
			}, {
				string: navigator.userAgent,
				subString: "MSIE",
				identity: "Explorer",
				versionSearch: "MSIE"
			}, {
				string: navigator.userAgent,
				subString: "Gecko",
				identity: "Mozilla",
				versionSearch: "rv"
			}, { // for older Netscapes (4-)
				string: navigator.userAgent,
				subString: "Mozilla",
				identity: "Netscape",
				versionSearch: "Mozilla"
			}],
			dataOS: [{
				string: navigator.platform,
				subString: "Win",
				identity: "Windows"
			}, {
				string: navigator.platform,
				subString: "Mac",
				identity: "Mac"
			}, {
				string: navigator.userAgent,
				subString: "iPhone",
				identity: "iPhone/iPod"
			}, {
				string: navigator.platform,
				subString: "Linux",
				identity: "Linux"
			}]
		};
		BrowserDetect.init();
    </script>
{% endblock %}